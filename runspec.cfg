
[grid]

# number of timesteps
nt = integer(default=100)
            
# number of spatial grid points in x
nx = integer(default=101)

# number of spatial grid points in y
ny = integer(default=101)

# length of timestep
ht = float(default=0.01)

# spatial domain in x
Lx  = float(default=1.0)
x1  = float(default=0.0) 
x2  = float(default=0.0) 

# spatial domain in y
Ly  = float(default=1.0)
y1  = float(default=0.0) 
y2  = float(default=0.0) 


[solver]

# run in linear mode (with prescribed streaming function phi)
# or in nonlinear mode (solving the Poisson equation for phi)
nonlinear = boolean(default=True)     

# PETSc linear solver type
petsc_ksp_type      = string(default='gmres')

# PETSc linear solver relative convergence tolerance
# (relative decrease in the residual norm)
petsc_ksp_rtol      = float(default=1E-7)		

# PETSc linear solver absolute convergence tolerance
# (absolute size of the residual norm)
petsc_ksp_atol      = float(default=1E-10)
		
# PETSc linear solver maximum number of iterations
petsc_ksp_max_iter  = integer(default=1000)		

# PETSC nonlinear solver absolute convergence tolerance
petsc_snes_rtol     = float(default=1E-20)
		
# PETSC nonlinear solver relative convergence tolerance
petsc_snes_atol     = float(default=1E-12)
		
# PETSC nonlinear solver convergence tolerance in terms
# of the norm of the change in the solution between steps
petsc_snes_stol     = float(default=1E-14)
		
# PETSC nonlinear solver maximum number of iterations
petsc_snes_max_iter = integer(default=20)		


[initial_data]

# python script with init functions 
python = string(default=None)


[io]

# restart run from hdf5 file, not implemented yet
hdf5_input  = string(default=None)

# write data to hdf5 file
hdf5_output = string(default=None)

# save every nsave'th timestep
nsave       = integer(default=1)

